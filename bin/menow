#!/bin/bash

# extended globbing for TIMESTAMP matching support
shopt -s extglob
ME=~/pkb/me

# NOTE: if format is changed remember to change
#       the POSSIBLY_FILE trimming below
TIMESTAMP=`date +%m%d-%H%M`
FILE_EXT=".md"
TITLE="$@"

# If the first argument is a pre-existing file
POSSIBLY_FILE="$(realpath --relative-to . "$1")"
if [[ -f "$POSSIBLY_FILE" ]]; then
  # we use that file as the title
  TITLE="$(basename "$POSSIBLY_FILE")"
  # trim a prepended TIMESTAMP if there is any
  TITLE="${TITLE#*+([0-9])-+([0-9])_}"
  POSSIBLY_FILE="previously: file://./$POSSIBLY_FILE"
else
  POSSIBLY_FILE=""
fi

TITLE=${TITLE//[ ]/_}
if [[ "$TITLE" != "" ]]; then
  TITLE="_$TITLE"
  PREVIOUS_MENOW=($ME/**/*${TITLE}${FILE_EXT})
fi

if [ -f "$PREVIOUS_MENOW" ]; then
  echo "## [" `date +%T` "]" >> "$PREVIOUS_MENOW"
  exec $EDITOR "$PREVIOUS_MENOW"
fi


# Check that `now` exists
pushd $ME
NOW=$(date +%Y)
if ! ls -l now | grep -q $NOW; then
  # and link it if it doesn't
  mkdir -p "$NOW"
  ln -srf $NOW now
fi
MENOW="$ME/now"
popd

FULL_FILE_PATH="$MENOW/${TIMESTAMP}$TITLE$FILE_EXT"

case `basename "$0"` in
  menow)
    ;;
  todayi)
    FULL_FILE_PATH="$MENOW/`date +%m%d`_today_I$FILE_EXT"
    set -x
    echo "## [" `date +%T` "]" >> "$FULL_FILE_PATH"
    if [ -n "$1" ]; then
      echo "- $@" >> "$FULL_FILE_PATH"
      exit 0
    fi
    ;;
  herenow)
    ln -s "$FULL_FILE_PATH" .
    ;;
esac

set -x
# we echo this at the top of the file, as a reference to the previous file
[ -n "$POSSIBLY_FILE" ] && echo "$POSSIBLY_FILE" >> "$FULL_FILE_PATH"
exec $EDITOR "$FULL_FILE_PATH"
